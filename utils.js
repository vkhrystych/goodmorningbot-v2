const fetch = require("node-fetch");

const monthesLocale = [
  "—è–Ω–≤–∞—Ä—è",
  "—Ñ–µ–≤—Ä–∞–ª—è",
  "–º–∞—Ä—Ç–∞",
  "–∞–ø—Ä–µ–ª—è",
  "–º–∞—è",
  "–∏—é–Ω—è",
  "–∏—é–ª—è",
  "–∞–≤–≥—É—Å—Ç–∞",
  "—Å–µ–Ω—Ç—è–±—Ä—è",
  "–æ–∫—Ç—è–±—Ä—è",
  "–Ω–æ—è–±—Ä—è",
  "–¥–µ–∫–∞–±—Ä—è",
];

module.exports = {
  getCityFromGoogleResponse: (results) => {
    let storableLocation = {};

    for (var ac = 0; ac < results[0].address_components.length; ac++) {
      var component = results[0].address_components[ac];

      if (
        component.types.includes("sublocality") ||
        component.types.includes("locality")
      ) {
        storableLocation.city = component.long_name;
      } else if (component.types.includes("administrative_area_level_1")) {
        storableLocation.state = component.short_name;
      } else if (component.types.includes("country")) {
        storableLocation.country = component.long_name;
        storableLocation.registered_country_iso_code = component.short_name;
      }
    }

    return storableLocation;
  },
  getWeather: async (city) => {
    const response = await fetch(
      `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${process.env.OPEN_WEATHER_TOKEN}`
    );
    const result = await response.json();

    const message =
      "üßê *–ü–æ–≥–æ–¥–∞* " +
      result.weather[0].description +
      "\nüå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: " +
      Math.floor(result.main.temp) +
      "\nü§ñ –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: " +
      Math.floor(result.main.feels_like) +
      "\nüê≥ –í–ª–∞–∂–Ω–æ—Å—Ç—å: " +
      result.main.humidity +
      "%\n";

    return message;
  },
  getNews: async () => {
    const response = await fetch(
      `https://api.dtf.ru/v1.9/timeline/index/popular?count=3`,
      {
        headers: { "X-Device-Token": process.env.DTF_TOKEN },
      }
    );

    const resJson = await response.json();

    return resJson.result;
  },
  prepareData: async (city) => {
    const date = new Date();

    let result = `*–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ, –∫–æ–∂–∞–Ω—ã–π –º–µ—à–æ–∫* üëæ \n–°–µ–≥–æ–¥–Ω—è ${date.getDate()} ${
      monthesLocale[date.getMonth()]
    } \n\n`;

    const weather = await module.exports.getWeather(city);
    const news = await module.exports.getNews();

    result += weather;

    let newsStr = "\n–ê –≤–æ—Ç –∏ –ª—É—á—à–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã —Å –î–¢–§ –Ω–∞ —É—Ç—Ä–æ:";

    news.forEach((item) => {
      newsStr += `\n\nüîπÔ∏è[${item.title || "–ù–µ—Ç —Ç–∞–π—Ç–ª–∞"}](${item.url})`;
    });

    result += newsStr;

    return result;
  },
};
